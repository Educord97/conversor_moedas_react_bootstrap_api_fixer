[{"C:\\conversorMoedasHook\\src\\conversor-moedas.js":"1","C:\\conversorMoedasHook\\src\\index.js":"2","C:\\conversorMoedasHook\\src\\listarMoedas.js":"3"},{"size":4406,"mtime":1611066606724,"results":"4","hashOfConfig":"5"},{"size":304,"mtime":1610221909952,"results":"6","hashOfConfig":"5"},{"size":1114,"mtime":1610738258436,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"17rqome",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\conversorMoedasHook\\src\\conversor-moedas.js",["15"],"import React, { useState } from \"react\";\nimport \"./conversor-moedas.css\";\nimport ListarMoedas from \"./listarMoedas\";\nimport axios from 'axios';\nimport {\n  Jumbotron,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n  Modal,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ConversorMoedas() {\n\n  const FIXER_URL = 'http://data.fixer.io/api/latest?access_key=d9199c0800b1891bd17db4e8e8c1212e';\n\n  const [valor, setValor] = useState(\"1\");\n  const [moedaDe, setmoedaDe] = useState(\"BRL\");\n  const [moedaPara, setMoedaPara] = useState(\"USD\");\n  const [exibirSpinner, setExibirSpinner] = useState(false);\n  const [formValidado, setFormValidado] = useState(false);\n  const [exibirModal, setExibirModal] = useState(false);\n  const [resultadoConversao, setResultadoConversao] = useState(\"\");\n  const [exibirMsgErro, setExibirMsgErro] = useState(false);\n\n  function handleValor(event) {\n    setValor(event.target.value.replace(/\\D/g, \"\"));\n  }\n\n  function handleMoedaDe(event) {\n    setmoedaDe(event.target.value);\n  }\n\n  function handleMoedaPara(event) {\n    setMoedaPara(event.target.value);\n  }\n\n  function handleFecharModal(event) {\n    setValor('1');\n    setmoedaDe('BRL');\n    setMoedaPara(\"USD\");\n    setFormValidado(false);\n    setExibirModal(false);\n  }\n\n  function converter(event) {\n    event.preventDefault();\n    setFormValidado(true);\n\n    if (event.currentTarget.checkValidity() === true ) {\n     setExibirSpinner(true);   \n\n     axios.get(FIXER_URL)\n       .then(res => {\n         const cotacao = obterCotacao(res.data);\n         if (cotacao) {\n          setResultadoConversao(`${valor} ${moedaDe} = ${cotacao} ${moedaPara}`);\n          setExibirModal(true);\n          setExibirSpinner(false);\n         } else {\n           exibirErro();\n         }\n       \n       }).catch(err => exibirErro());\n  }\n}\n\n  function obterCotacao(dadosCotacao) {\n    if (!dadosCotacao || dadosCotacao.success !== true) {\n      return false;\n    }\n    const cotacaoDe = dadosCotacao.rates[moedaDe];\n    const cotacaoPara = dadosCotacao.rates[moedaPara];\n    const cotacao = (1 / cotacaoDe * cotacaoPara) * valor;\n    return cotacao.toFixed(2);\n  }\n\n  function exibirErro() {\n    setExibirMsgErro(true);\n    setExibirSpinner(false);\n  }\n\n  return (\n    <div>\n      <h1>Conversor de Moedas</h1>\n      <Alert variant=\"danger\" show={exibirMsgErro}>\n        Erro obtendo dados de conversão, tente novamente.\n      </Alert>\n      <Jumbotron>\n        <Form onSubmit={converter} noValidate validated={formValidado}>\n          <Form.Row>\n            <Col sm=\"3\">\n              <Form.Control\n                placeholder=\"0\"\n                value={valor}\n                required\n                onChange={handleValor}\n              />\n            </Col>\n\n            <Col sm=\"3\">\n              <Form.Control\n                as=\"select\"\n                value={moedaDe}\n                onChange={handleMoedaDe}\n              >\n                <ListarMoedas />\n              </Form.Control>\n            </Col>\n\n            <Col sm=\"1\" className=\"text-center\" style={{ paddingTop: \"5px\" }}>\n              <FontAwesomeIcon icon={faAngleDoubleRight} />\n            </Col>\n\n            <Col sm=\"3\">\n              <Form.Control\n                as=\"select\"\n                value={moedaPara}\n                onChange={handleMoedaPara}\n              >\n                <ListarMoedas />\n              </Form.Control>\n            </Col>\n\n            <Col sm=\"2\">\n              <Button variant=\"success\" type=\"submit\">\n                <span className={exibirSpinner ? null : 'hidden'}>\n                  <Spinner animation=\"border\" size=\"sm\" />\n                </span>\n                <span className={exibirSpinner ? 'hidden' : null}>Converter</span>\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n\n        <Modal show={exibirModal} onHide={handleFecharModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Conversão</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {resultadoConversao}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={handleFecharModal}>Nova Conversão</Button>\n          </Modal.Footer>\n        </Modal>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default ConversorMoedas;\n","C:\\conversorMoedasHook\\src\\index.js",[],"C:\\conversorMoedasHook\\src\\listarMoedas.js",[],{"ruleId":"16","severity":1,"message":"17","line":7,"column":3,"nodeType":"18","messageId":"19","endLine":7,"endColumn":6},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar"]